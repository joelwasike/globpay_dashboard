{"ast":null,"code":"import axios from 'axios';\n\n// API base URL configuration\nconst API_BASE_URL = 'https://merchants.globpay.ai'; // Always use direct URL\n\nconsole.log('API Configuration:', {\n  NODE_ENV: process.env.NODE_ENV,\n  API_BASE_URL: API_BASE_URL,\n  fullURL: API_BASE_URL + '/api/v1/transaction/read/balance'\n});\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Disable credentials for CORS\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('merchant_token');\n  if (token) {\n    // Use Authorization header with Bearer token\n    config.headers.Authorization = `Bearer ${token}`;\n\n    // Remove query parameter to avoid duplication\n    if (config.params && config.params.token) {\n      delete config.params.token;\n    }\n  }\n\n  // Log the actual request URL for debugging\n  console.log('API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: config.baseURL + config.url,\n    headers: config.headers,\n    params: config.params\n  });\n  return config;\n});\n\n// Add response interceptor for error handling and logging\napi.interceptors.response.use(response => {\n  console.log('API Response Success:', {\n    status: response.status,\n    url: response.config.url,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$response3;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\nexport default api;\nexport { API_BASE_URL };","map":{"version":3,"names":["axios","API_BASE_URL","console","log","NODE_ENV","process","env","fullURL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","params","method","toUpperCase","url","response","status","data","error","_error$response","_error$response2","_error$config","_error$response3","statusText","message","Promise","reject"],"sources":["/home/joel/projects/davy/merchants dashboard/src/config/api.js"],"sourcesContent":["import axios from 'axios';\n\n// API base URL configuration\nconst API_BASE_URL = 'https://merchants.globpay.ai'; // Always use direct URL\n\nconsole.log('API Configuration:', {\n  NODE_ENV: process.env.NODE_ENV,\n  API_BASE_URL: API_BASE_URL,\n  fullURL: API_BASE_URL + '/api/v1/transaction/read/balance'\n});\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: false, // Disable credentials for CORS\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('merchant_token');\n  if (token) {\n    // Use Authorization header with Bearer token\n    config.headers.Authorization = `Bearer ${token}`;\n    \n    // Remove query parameter to avoid duplication\n    if (config.params && config.params.token) {\n      delete config.params.token;\n    }\n  }\n  \n  // Log the actual request URL for debugging\n  console.log('API Request:', {\n    method: config.method?.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: config.baseURL + config.url,\n    headers: config.headers,\n    params: config.params\n  });\n  \n  return config;\n});\n\n// Add response interceptor for error handling and logging\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response Success:', {\n      status: response.status,\n      url: response.config.url,\n      data: response.data\n    });\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', {\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      url: error.config?.url,\n      data: error.response?.data,\n      message: error.message\n    });\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\nexport { API_BASE_URL };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,8BAA8B,CAAC,CAAC;;AAErDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;EAChCC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACF,QAAQ;EAC9BH,YAAY,EAAEA,YAAY;EAC1BM,OAAO,EAAEN,YAAY,GAAG;AAC1B,CAAC,CAAC;;AAEF;AACA,MAAMO,GAAG,GAAGR,KAAK,CAACS,MAAM,CAAC;EACvBC,OAAO,EAAET,YAAY;EACrBU,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,KAAK,CAAE;AAC1B,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EACpD,IAAIF,KAAK,EAAE;IACT;IACAF,MAAM,CAACL,OAAO,CAACU,aAAa,GAAG,UAAUH,KAAK,EAAE;;IAEhD;IACA,IAAIF,MAAM,CAACM,MAAM,IAAIN,MAAM,CAACM,MAAM,CAACJ,KAAK,EAAE;MACxC,OAAOF,MAAM,CAACM,MAAM,CAACJ,KAAK;IAC5B;EACF;;EAEA;EACAhB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;IAC1BoB,MAAM,GAAAN,cAAA,GAAED,MAAM,CAACO,MAAM,cAAAN,cAAA,uBAAbA,cAAA,CAAeO,WAAW,CAAC,CAAC;IACpCC,GAAG,EAAET,MAAM,CAACS,GAAG;IACff,OAAO,EAAEM,MAAM,CAACN,OAAO;IACvBH,OAAO,EAAES,MAAM,CAACN,OAAO,GAAGM,MAAM,CAACS,GAAG;IACpCd,OAAO,EAAEK,MAAM,CAACL,OAAO;IACvBW,MAAM,EAAEN,MAAM,CAACM;EACjB,CAAC,CAAC;EAEF,OAAON,MAAM;AACf,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZxB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;IACnCwB,MAAM,EAAED,QAAQ,CAACC,MAAM;IACvBF,GAAG,EAAEC,QAAQ,CAACV,MAAM,CAACS,GAAG;IACxBG,IAAI,EAAEF,QAAQ,CAACE;EACjB,CAAC,CAAC;EACF,OAAOF,QAAQ;AACjB,CAAC,EACAG,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA;EACT/B,OAAO,CAAC2B,KAAK,CAAC,YAAY,EAAE;IAC1BF,MAAM,GAAAG,eAAA,GAAED,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBH,MAAM;IAC9BO,UAAU,GAAAH,gBAAA,GAAEF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBG,UAAU;IACtCT,GAAG,GAAAO,aAAA,GAAEH,KAAK,CAACb,MAAM,cAAAgB,aAAA,uBAAZA,aAAA,CAAcP,GAAG;IACtBG,IAAI,GAAAK,gBAAA,GAAEJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI;IAC1BO,OAAO,EAAEN,KAAK,CAACM;EACjB,CAAC,CAAC;EACF,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAerB,GAAG;AAClB,SAASP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}