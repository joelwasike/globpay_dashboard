{"ast":null,"code":"import axios from'axios';// API base URL configuration (direct to backend, no proxy)\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'https://merchants.globpay.ai';console.log('API Configuration:',{NODE_ENV:process.env.NODE_ENV,API_BASE_URL:API_BASE_URL,fullURL:API_BASE_URL+'/api/v1/transaction/read/balance'});// Create axios instance with base URL\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json','Accept':'application/json'},withCredentials:false// Disable credentials for CORS\n});// Add token to requests if available\napi.interceptors.request.use(config=>{var _config$method;const token=localStorage.getItem('merchant_token');// Don't add Authorization header for login endpoint\nif(token&&!config.url.includes('/api/users/login')){// Always use Authorization header with Bearer token\nconfig.headers.Authorization=`Bearer ${token}`;// Remove query parameter to avoid duplication\nif(config.params&&config.params.token){delete config.params.token;}}// Log the actual request URL for debugging\nconsole.log('API Request:',{method:(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),url:config.url,baseURL:config.baseURL,fullURL:config.baseURL+config.url,headers:config.headers,params:config.params,hasToken:!!token,isLoginRequest:config.url.includes('/api/users/login'),environment:process.env.NODE_ENV});return config;});// Add response interceptor for error handling and logging\napi.interceptors.response.use(response=>{console.log('API Response Success:',{status:response.status,url:response.config.url,data:response.data});return response;},error=>{var _error$response,_error$response2,_error$config,_error$response3;console.error('API Error:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,statusText:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.statusText,url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,data:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data,message:error.message});return Promise.reject(error);});export default api;export{API_BASE_URL};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","NODE_ENV","fullURL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","_config$method","token","localStorage","getItem","url","includes","Authorization","params","method","toUpperCase","hasToken","isLoginRequest","environment","response","status","data","error","_error$response","_error$response2","_error$config","_error$response3","statusText","message","Promise","reject"],"sources":["/home/joel/projects/davy/merchants dashboard/src/config/api.js"],"sourcesContent":["import axios from 'axios';\n\n// API base URL configuration (direct to backend, no proxy)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://merchants.globpay.ai';\n\nconsole.log('API Configuration:', {\n  NODE_ENV: process.env.NODE_ENV,\n  API_BASE_URL: API_BASE_URL,\n  fullURL: API_BASE_URL + '/api/v1/transaction/read/balance'\n});\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: false, // Disable credentials for CORS\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('merchant_token');\n  \n  // Don't add Authorization header for login endpoint\n  if (token && !config.url.includes('/api/users/login')) {\n    // Always use Authorization header with Bearer token\n    config.headers.Authorization = `Bearer ${token}`;\n    \n    // Remove query parameter to avoid duplication\n    if (config.params && config.params.token) {\n      delete config.params.token;\n    }\n  }\n  \n  // Log the actual request URL for debugging\n  console.log('API Request:', {\n    method: config.method?.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: config.baseURL + config.url,\n    headers: config.headers,\n    params: config.params,\n    hasToken: !!token,\n    isLoginRequest: config.url.includes('/api/users/login'),\n    environment: process.env.NODE_ENV\n  });\n  \n  return config;\n});\n\n// Add response interceptor for error handling and logging\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response Success:', {\n      status: response.status,\n      url: response.config.url,\n      data: response.data\n    });\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', {\n      status: error.response?.status,\n      statusText: error.response?.statusText,\n      url: error.config?.url,\n      data: error.response?.data,\n      message: error.message\n    });\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\nexport { API_BASE_URL };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}